<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Linux 卸载Linux系统]]></title>
      <url>http://yoursite.com/2016/09/05/Linux-%E5%8D%B8%E8%BD%BDLinux%E7%B3%BB%E7%BB%9F/</url>
      <content type="html"><![CDATA[<p>前段时间决定要系统学习Linux，于是想把很久前安装在电脑上的ubuntu卸装再安装linux mint(这也是ubuntu冏rz)，当安装完linux mint 17的64位系统时它将原本的ubuntu覆盖掉了，在编译C程序时发觉少了库文件，再安装发觉问题没有解决，于是再安装了mint的32位系统，于是产生mint 32位、64位系统和win7共存的情况，最后决定卸装mint 64位系统。<br>教程<a href="http://www.cnblogs.com/woshijpf/p/3835659.html" target="_blank" rel="external">一台电脑上含有多个ubuntu系统的卸载方法</a><br><a id="more"></a></p>
<h2 id="查看linux系统的分区情况"><a href="#查看linux系统的分区情况" class="headerlink" title="查看linux系统的分区情况"></a>查看linux系统的分区情况</h2><p>分别进入两个linux系统，进入控制台，输入命令“sudo df -hl”查看文件系统的挂在情况，之前我操作时没有截图，现在使用教程中的截图。<br>例如：原作者的32位系统的文件系统的挂载情况是这样的：<br><img src="https://raw.githubusercontent.com/HiKumho/blog/master/img/blog_5_1.jpg" alt=""></p>
<p>我的32系统没有/boot和/home分区，应该是安装系统时没有设置好。先继续往下走</p>
<p>我们可以看到原作者这个系统的挂载情况是：<br>/ （根文件目录）                             挂载在了/dev/sda10上面<br>/boot  （启动文件目录）                 挂载在了/dev/sda8上面<br>/home  (用户主目录)                       挂载在了/dev/sda11上面<br>安装系统时还分配了一个swap（交换分区），在这里我们并没有看到啊，但是，我们可以输入命令“sudo  fdisk   -l”查看整个硬盘的分区情况<br>在这里我们看到的/dev/sda9 就是我这个32位系统对应的交换分区。<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_2.jpg?raw=true" alt=""></p>
<p>我们记下根目录、/boot、/home、/swap内存块(Blocks)大小。这里要换算单位，Blocks里单位是字节，需要换算成GB，方便我们下面比较。换算公式：1GB=1024*1024B。64位系统也要这样记录。</p>
<p>同理我们进入64位的系统的文件系统的挂载情况是：<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_3.jpg?raw=true" alt=""></p>
<h2 id="删除GRUB-恢复Window引导"><a href="#删除GRUB-恢复Window引导" class="headerlink" title="删除GRUB 恢复Window引导"></a>删除GRUB 恢复Window引导</h2><p>接下来，我们就重启电脑，进入windows系统。由于我安装的三系统是由Ubuntu系统的GRUB来引导的，它把启动信息写入到了磁盘的MBR（磁盘中的一小块区域负责引导系统启动用的）中。（如果你的电脑一开机就进入到了GRUB菜单，说明的GRUB的确写入到了MBR中）</p>
<p>接下来主要进行的就是删除GRUB的操作</p>
<ol>
<li>进入windows 7系统，下载一个MbrFix的修复软件，放在、C:\windows\System32文件夹中。</li>
<li>按“windows键+R”，然后输入cmd回车，就可以进入了命令行提示符界面。</li>
<li>在命令行提示符界面中我们输入 MbrFix      /drive  0  fixmbr  回车(这里你可能需要进入MbfFix所在的文件夹内)<br>这时候，屏幕上会提示你是否进行修复的询问？你输入 y或者yes回车确认就可以了。如果什么也不出现了，只是显示命令行的提示符而已时，说明你的MBR修复好了。</li>
<li>重启电脑，如果你的电脑没有出现GRUB菜单，直接进入windows系统则说明你真正地修复成功了。</li>
</ol>
<h2 id="删除Linux分区"><a href="#删除Linux分区" class="headerlink" title="删除Linux分区"></a>删除Linux分区</h2><p>接下来我们就该删除我们不想要linux系统的分区了，我这儿的例子是删除我电脑了不想要的的64位的Ubuntu系统。</p>
<ol>
<li>计算机右键单击–&gt;&gt;管理–&gt;&gt;存储–&gt;&gt;磁盘管理，这样我们就进入了磁盘管理的界面</li>
<li>我们可以在下面的磁盘管理图中看到，没有C,D,E,F,卷标之类的区域，没错，我们终于找到了linux的磁盘空间。下图就是我电脑的情况：<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_4.png?raw=true" alt=""></li>
</ol>
<p>其中画红线的区域就是两个Ubuntu系统所占的空间。</p>
<p>但是哪一个才是64位Ubuntu系统所占的磁盘空间呢。我们得看第一步中的几个图了。通过第一步中的第二、第三个图我们可以知道，64的Ubuntu系统就占的是设备块/dev/sda12/（14.9GB）,/dev/sda13/（1.86GB）,/dev/sda14/（190MB）,/dev/sda15/（13.32GB）。。有木有发现，我下图绿色圈起来的区域就是要删除的区域。<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_5.png?raw=true" alt=""></p>
<p>接下来，我们就在上面的磁盘空间中找到每个对应大小的磁盘空间，右键删除即可。删除完后，我们会发现，删除后的空就会变成绿色（这就表示这块空间空闲可用）。如果你想把这块区域分配给windows用的话，你可以右键这块绿色的区域，进行“新建简单卷”，按照提示来操作即可。到此我们真的就把64位的ubuntu给删了，真的没有啦。</p>
<p>但是你重启下电脑会发现，它还是会直接进入windows系统，那你的另外一个系统怎么办呢？它跑哪里去啦？</p>
<h2 id="修复GRUB"><a href="#修复GRUB" class="headerlink" title="修复GRUB"></a>修复GRUB</h2><p>首先，你得制作一个Ubuntu系统的启动盘，这是用来修复GRUB用的。进入Ubuntu试用模式</p>
<ol>
<li><p>进入root 用户模式，输入“sudo -i”<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_6.jpg?raw=true" alt=""></p>
</li>
<li><p>使用命令“fdisk -l”查看现在的磁盘使用情况，我们可以清楚地看到我们现在只有4个linux相关的分区了。<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_7.jpg?raw=true" alt=""></p>
</li>
<li><p>现在我们就将GRUB安装到MBR中。按照图中命令敲吧。（如果你安装的Ubuntu系统中没有将/boot/挂载到具体的某一个磁盘上的话，mount /dev/sda8 /mnt/boot/  这个命令你就跳过吧）<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_8.jpg?raw=true" alt=""></p>
</li>
<li><p>上面的运行结果显示无错误。我们现在已经基本大功告成,如果上面运行结果有错误，可以是使用boot-repair来修复，教程<a href="http://jingyan.baidu.com/article/5553fa82cd48a765a23934ae.html" target="_blank" rel="external">用Boot-repair修复双系统引导</a></p>
</li>
<li><p>最后更新的GRUB,输入命令“sudo update -grub”<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_9.jpg?raw=true" alt=""></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 查看主机硬件信息]]></title>
      <url>http://yoursite.com/2016/09/05/Linux-%E6%9F%A5%E7%9C%8B%E4%B8%BB%E6%9C%BA%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF/</url>
      <content type="html"><![CDATA[<p>最近在学习Linux,看的资料是鸟哥的.书上有道习题是查看自己主机的硬件信息,现在在这里总结下.<br><a id="more"></a></p>
<h3 id="查看CPU的厂商-型号-最高频率"><a href="#查看CPU的厂商-型号-最高频率" class="headerlink" title="查看CPU的厂商/型号/最高频率"></a>查看CPU的厂商/型号/最高频率</h3><ul>
<li>查看CPU信息  使用命令   <code>cat  /proc/cpuinfo</code><br>MyCpu 厂商:Intel  型号:Celeron 1017U 最高频率:1.60GHz(准确的是1587.625MHz)<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_1.png?raw=true" alt=""></li>
</ul>
<h3 id="查看内存的容量-接口-DDR-DDRII等"><a href="#查看内存的容量-接口-DDR-DDRII等" class="headerlink" title="查看内存的容量/接口(DDR/DDRII等)"></a>查看内存的容量/接口(DDR/DDRII等)</h3><ul>
<li><p>查看内存容量   使用命令   <code>cat  /proc/meminfo</code><br>My 内存总容量:5.79GB(6075060KB)<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_2.png?raw=true" alt=""></p>
</li>
<li><p>查看内存接口   使用命令   <code>dmidecode | grep -A16 &quot;Memory Device$&quot;</code><br>My 内存接口:DDR3<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_3.png?raw=true" alt=""></p>
</li>
</ul>
<h3 id="查看显卡的接口-AGP-PCIe内置-与容量"><a href="#查看显卡的接口-AGP-PCIe内置-与容量" class="headerlink" title="查看显卡的接口(AGP/PCIe内置)与容量"></a>查看显卡的接口(AGP/PCIe内置)与容量</h3><ul>
<li><p>查看显卡型号  使用命令   <code>lshw -C display</code><br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_4.png?raw=true" alt=""></p>
</li>
<li><p>查看显存     使用命令   <code>lspci -vnn | grep VGA -A 12</code><br>观察memory at d0000000<br>My 显存:256MB<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_5.png?raw=true" alt=""></p>
</li>
</ul>
<h3 id="查看主板的型号-南北桥的芯片型号-BIOS的版本-网卡声卡的型号"><a href="#查看主板的型号-南北桥的芯片型号-BIOS的版本-网卡声卡的型号" class="headerlink" title="查看主板的型号/南北桥的芯片型号/BIOS的版本/网卡声卡的型号"></a>查看主板的型号/南北桥的芯片型号/BIOS的版本/网卡声卡的型号</h3><ul>
<li><p>查看主板型号  使用命令 <code>dmidecode | grep -A16 &quot;System Information$&quot;</code><br>My 主板型号 03N858<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_6.png?raw=true" alt=""></p>
</li>
<li><p>查看南北桥芯片型号</p>
<ul>
<li>北桥芯片型号  使用命令  <code>dmesg | grep Chipset</code><br>My 北桥芯片型号 GF117<br><code>[   15.436587] nouveau  [  DEVICE][0000:02:00.0] Chipset: GF117 (NVD7)</code></li>
<li>南桥芯片型号  没有查到</li>
</ul>
</li>
</ul>
<ul>
<li><p>查看BIOS版本   使用命令 <code>dmidecode --type Bios</code><br>My BIOS版本: A05</p>
</li>
<li><p>查看声卡  使用命令 <code>lspci |grep -i audio</code><br>My 声卡: Inter 7 Series /C210</p>
</li>
<li><p>查看网卡  使用命令  <code>lspci | grep - i eth</code><br>My 网卡:Realtek RTL8101/2/6E</p>
</li>
</ul>
<h3 id="查看硬盘的连接接口-IDE-SATA等-硬盘容量-转速-缓冲存储器容量等"><a href="#查看硬盘的连接接口-IDE-SATA等-硬盘容量-转速-缓冲存储器容量等" class="headerlink" title="查看硬盘的连接接口(IDE/SATA等)/硬盘容量/转速/缓冲存储器容量等"></a>查看硬盘的连接接口(IDE/SATA等)/硬盘容量/转速/缓冲存储器容量等</h3><ul>
<li><p>查看硬盘的连接接口 使用命令 <code>lspci | grep 00:1f.2</code><br>My的硬盘连接接口:SATA<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_8.png?raw=true" alt=""></p>
</li>
<li><p>查看硬盘容量 使用命令 <code>lsblk</code><br>My硬盘容量:465.8G<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_9.png?raw=true" alt=""></p>
</li>
<li><p>查看硬盘转速 使用命令 <code>hdparm -I /dev/sda</code>  观察Nominal Media Rotation Rate行<br>My硬盘转速:5400<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_10.png?raw=true" alt=""></p>
</li>
<li>查看缓冲存储器容量  没有找到命令</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[数据库管理 Excel数据导入Mysql]]></title>
      <url>http://yoursite.com/2016/09/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86-Excel%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5Mysql/</url>
      <content type="html"><![CDATA[<h2 id="EXCEL筛选数据"><a href="#EXCEL筛选数据" class="headerlink" title="EXCEL筛选数据"></a>EXCEL筛选数据</h2><p> EXCEL中的数据可能有很多重复项，需要删除。<br>方法：    </p>
<ul>
<li>确认重复行，并在数据内容外的列设置公式形如=IF(A2=A1,1,2) // A2如果=A1 则当前单元格=1  并运行此公式至所有列（光标指向当前单元格右下角出现黑十字往拉下）</li>
<li>对上述所得的列进行选择性粘贴，粘贴为数据</li>
<li>然后对上所得的列进行“筛选”，选择数据为1（可能为2，要实际处理）的行全部删除<br>参考<a href="http://jingyan.baidu.com/article/eae078278fbdd81fec54853c.html" target="_blank" rel="external">WPS表格（或EXCEL）如何方便删除重复行</a></li>
</ul>
<h2 id="EXCEL导入数据"><a href="#EXCEL导入数据" class="headerlink" title="EXCEL导入数据"></a>EXCEL导入数据</h2><p>我是将EXCEL数据转成TXT文本格式(UTF8编码)<br>方法：</p>
<ul>
<li>直接将EXEL数据另存为TXT，这里WPS会有制表符还分割数据项。</li>
<li>我将数据项间的制表符用,替换</li>
<li>注意要删除TXT中每行最后的空格</li>
</ul>
<h2 id="MySQL中文字符的处理"><a href="#MySQL中文字符的处理" class="headerlink" title="MySQL中文字符的处理"></a>MySQL中文字符的处理</h2><p>如果想MySql导入中文字符，可能会出现乱码、报错等<br>之前在5.1报违反字符的错误，但当将数据库所有字符集设置成utf8后仍出现错误<br>这里原因可能是低版本的MySql不支持多字节的中文字符<br>于是将MySql升级到最新版本<br>关于设置Mysql字符集的方法可以在My.ini中设置Default-characters-set和 sever-characters-set<br><a href="http://my.oschina.net/5365437/blog/142312?fromerr=n6DQp3A3" target="_blank" rel="external">Mysql 插入数据里有中文字符出现 Incorrect string value 的错误</a>;</p>
<h3 id="MySql卸装处理"><a href="#MySql卸装处理" class="headerlink" title="MySql卸装处理"></a>MySql卸装处理</h3><ul>
<li>在Window中”服务”中停止Mysql</li>
<li>然后在”程序”中卸装Mysql</li>
<li>最后清除注册表<br>参考<a href="http://materliu.github.io/all/web/database/mysql/2014/04/24/uninstall-mysql-totaly.cm.html" target="_blank" rel="external">windows如何彻底卸载mysql</a></li>
</ul>
<h2 id="MySql数据文件导入"><a href="#MySql数据文件导入" class="headerlink" title="MySql数据文件导入"></a>MySql数据文件导入</h2><p>这里导入的是文本文件 </p>
<p>使用命令：<br>load data local infile ‘文件路径’ into table 表名<br>fields terminated by ‘,’<br>lines terminated by ‘\r\n’;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Web 前端技术介绍]]></title>
      <url>http://yoursite.com/2016/09/05/Web-%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<h2 id="HTML的概念"><a href="#HTML的概念" class="headerlink" title="HTML的概念"></a>HTML的概念</h2><p> 超文本标记语言（HyperText Markup Language，HTML）是一种用于创建网页的标准标记语言。HTML是一种基础技术，常与CSS，JS一起被众多网站用于设计令人赏心悦目的网页、网页应用程序以及移动应用程序的用户界面。以上摘抄着wiki<br>我的理解，HTML一种标记语言，不同一般文本(超越233)。Markdown也是标记语言，Markdown的文本会转成HTML或XHTML。</p>
<h3 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h3><ul>
<li>div标签：页面布局 我理解成div~Android.RelativeLayout      </li>
<li>h1~h6, p, span, strong, em等标签： 设置文本格式 （span标签之间有空格）</li>
<li>ul, li, ol, dl, dt, dd标签：此类标签用于设置带有列表内容的，比如导航栏的下拉菜单，多视频的缩略图等</li>
<li>form标签：form标签在UI显示上可以理解成div，透明的，用于提交数据</li>
<li>table标签：表格结构，尽量用div代替</li>
<li>img, canvas标签：图像容器，但是通常不直接操作，而是在其外层嵌套div，span标签（你问span是什么？span 用来组合元素，没有固定的格式表现。当对它应用样式时，它才会产生视觉上的变化。）</li>
<li>a标签：链接跳转<br>详细请看~<a href="https://leohxj.gitbooks.io/front-end-database/content/html-and-css-basic/common-tag.html" target="_blank" rel="external">前端工程师手册</a></li>
</ul>
<h3 id="HTML低保真图设计"><a href="#HTML低保真图设计" class="headerlink" title="HTML低保真图设计"></a>HTML低保真图设计</h3><p>低保真图便于用户了解整个项目的前端设计，快速开发出HTML页面原型图。<br><strong>使用工具：Axure</strong></p>
<h2 id="CSS的概念"><a href="#CSS的概念" class="headerlink" title="CSS的概念"></a>CSS的概念</h2><p>一种用来为结构化文档（如HTML文档或XML应用）添加样式（字体、间距和颜色等）的计算机语言，由W3C定义和维护。摘自Wiki<br>我理解成控制html标签的属性</p>
<h3 id="常用CSS属性"><a href="#常用CSS属性" class="headerlink" title="常用CSS属性"></a>常用CSS属性</h3><ul>
<li>定位Position: 属性值 relative 相对定位（相对与元素正常显示状态的偏离定位 其正常显示的区域空间仍然占据）<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;属性值absolute 绝对定位（元素脱离整个文档，相对与最近的已定位祖先元素，可以定位到其任何位置，并显示在最上层，其不占据原本显示的空间）<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;属性值 fixed 效果与absolute相同</li>
<li>元素居中： 布局容器内元素水平居中 容器的text-align:center;  容器内垂直居中容器的line-height=容器的height</li>
<li>列表水平： float：left</li>
<li>浮动float：可以定位元素 脱离文档流 当元素因为被浮动的元素影响其的布局时，该元素使用clear:both 清除浮动 显示该元素的原本位置</li>
</ul>
<h2 id="JavaScript的概念"><a href="#JavaScript的概念" class="headerlink" title="JavaScript的概念"></a>JavaScript的概念</h2><p>我的理解是前端脚本语言，实现一些用户交互功能，如弹出对话框，修改html、css属性等</p>
<h3 id="JS中构造对象"><a href="#JS中构造对象" class="headerlink" title="JS中构造对象"></a>JS中构造对象</h3><p>在JS中可以这样构造对象<br>funcation Persion(name,age){this.name=name;this.age=age;};<br>Persion Jack=new Persion(“Jack”,20);</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Github 基本操作]]></title>
      <url>http://yoursite.com/2016/09/05/Github-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h2 id="什么是Github？"><a href="#什么是Github？" class="headerlink" title="什么是Github？"></a>什么是Github？</h2><p>Github，要了解什么是Git，Git最初是linus为了管理Linux内核开发的代码版本控制器,当然还有多人异地协作开发的能力。Github是Git的网站平台。 总之就是分布式版本控制管理软件（笑），现在已经是重要的社交平台了2333</p>
<h2 id="注册安装"><a href="#注册安装" class="headerlink" title="注册安装"></a>注册安装</h2><p>注册不介绍了，请前往<a href="http://www.github.com" target="_blank" rel="external">Github</a>  安装可以使用Desktop版，但在线下载十分麻烦，可以Google下离线版，我是在<a href="http://download.csdn.net/download/nevinblog/9031049" target="_blank" rel="external">CSDN</a>上下载</p>
<h2 id="创建仓库（New-repository）"><a href="#创建仓库（New-repository）" class="headerlink" title="创建仓库（New repository）"></a>创建仓库（New repository）</h2><p>仓库就是管理项目的空间，在Github网站上创建的是在线版 Desktop创建的是本地版，当然通过Push及Pull（稍后解释）可以及时推送更新本地仓库</p>
<p><img src="https://pic3.zhimg.com/fa17ad7322545d236198a206063f378e_b.png" alt=""></p>
<h2 id="删除仓库"><a href="#删除仓库" class="headerlink" title="删除仓库"></a>删除仓库</h2><p>在仓库首页的settings中最下方有一个Danger Zone删除仓库,删除仓库需要输入仓库名确认<br><img src="http://static.oschina.net/uploads/space/2013/0331/140629_56aS_580112.png" alt=""></p>
<h2 id="关于Watch、Star、Fork、Clone"><a href="#关于Watch、Star、Fork、Clone" class="headerlink" title="关于Watch、Star、Fork、Clone"></a>关于Watch、Star、Fork、Clone</h2><p>Watch是关注，等作者更新时，会收到通知； Star是收藏，方便以后查找，不会收到作者更新通知fork就是拷贝作者的项目至我们git中了，可以理解成你想要参与此项目; Clone就是拷贝项目至本地，之前我就是把Github当成找源码的地方，现在好好学学:)</p>
<h2 id="上传Commit"><a href="#上传Commit" class="headerlink" title="上传Commit"></a>上传Commit</h2><p>仓库里有一条叫master的主线，当我们没有创建分支branch时，我们上传的文件是提交到master中，我们一个提交动作会有描述信息，方便我们日后查找此提交的信息，或者回滚提交~ 回滚历史版本请找小齿轮按钮（Roll Back to this Commit）<br><img src="https://pic4.zhimg.com/2e2d2a0da0662f65fb969ef8005ee01f_b.png" alt=""></p>
<h2 id="关于分支Branch"><a href="#关于分支Branch" class="headerlink" title="关于分支Branch"></a>关于分支Branch</h2><p>分支可以理解成我们项目的发行号，或者调试版本等等等</p>
<h2 id="有分支，当然有合并"><a href="#有分支，当然有合并" class="headerlink" title="有分支，当然有合并"></a>有分支，当然有合并</h2><p>合并Pull，当我们和一个大牛正在进行同一个项目的开发，一个大牛手上的branch或者master写的很多跟我们手上的branch或者master没有的功能，我们就会发送一个pull request给大牛，如果我们写的代码和大牛写的代码没有冲突，就可以自行合并大牛的代码至我们项目，如果有冲突，可以在pull request的空间上给大牛商量解决。 pull requestsh是双向的，即分支可以请求主线合并代码至主线，分支可以请求主线合并代码至分支，当然主线也是可以请求分支的。</p>
<h2 id="Github的基本操作图"><a href="#Github的基本操作图" class="headerlink" title="Github的基本操作图"></a>Github的基本操作图</h2><p><img src="https://pic4.zhimg.com/6c22d708def21094956b76bc7df2240b_b.png" alt=""></p>
<h2 id="关于MarkDown"><a href="#关于MarkDown" class="headerlink" title="关于MarkDown"></a>关于MarkDown</h2><p>MarkDown是一种标记的文本格式，可以转换成HTML或XML很方便~~</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://www.zhihu.com/question/20070065" target="_blank" rel="external">怎样使用 GitHub？</a> </li>
<li><a href="http://www.oschina.net/question/256591_103418" target="_blank" rel="external">怎么删除github上的仓库</a> </li>
<li><a href="https://www.zhihu.com/question/20406847" target="_blank" rel="external">GitHub 中为什么有了 Watch 又增加了一个 Star 呢？</a> </li>
</ul>
]]></content>
    </entry>
    
  
  
</search>
