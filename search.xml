<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Linux 磁盘分区]]></title>
      <url>http://yoursite.com/2016/09/05/Linux-%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA/</url>
      <content type="html"><![CDATA[<!--
## <a name="index">Index</a>
* <a href="#ch1"> Linux与硬件</a>
  * <a href="#ch1.1"> 各硬件设备在Linux中的文件名</a>
* <a href="#ch2"> 磁盘分区</a>
  * <a href="#ch2.1"> 磁盘的物理结构</a>
  * <a href="#ch2.2"> 磁盘分区表</a>
  * <a href="#ch2.3"> 开机流程与主引导分区(MBR)</a>
  * <a href="#ch2.4"> 文件系统与目录树</a>
* <a href="#ch3"> 主机硬盘的规划</a>
  * <a href="#ch3.1"> 基本硬盘分区模式</a>
-->
<h2 id="Linux与硬件"><a href="#Linux与硬件" class="headerlink" title=" Linux与硬件"></a><a name="ch1"> Linux与硬件</a></h2><h3 id="各硬件设备在Linux中的文件名"><a href="#各硬件设备在Linux中的文件名" class="headerlink" title=" 各硬件设备在Linux中的文件名"></a><a name="ch1.1"> 各硬件设备在Linux中的文件名</a></h3><p>在Linux系统中，每个设备都被当成一个文件来对待。举例说，IDE接口连接的硬盘的文件名即为/dev/hd[a-d],其中，括号内的字母为a-d当中的任意一个。</p>
<p>下面列出几个常见设备与其在Linux当中的文件名，更多Linux内核支持的硬件与文件名，可以参考<a href="https://www.kernel.org/pub/linux/docs/lanana/device-list/devices-2.6.txt" target="_blank" rel="external">Linux内核支持硬件列表</a>。</p>
<table>
<thead>
<tr>
<th style="text-align:center">设备</th>
<th style="text-align:center">Liunx中的文件名</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">IDE硬盘</td>
<td style="text-align:center">/dev/hd[a-d]</td>
</tr>
<tr>
<td style="text-align:center">SCSI/SATA/USB硬盘</td>
<td style="text-align:center">/dev/sd[a-p]</td>
</tr>
<tr>
<td style="text-align:center">U盘</td>
<td style="text-align:center">/dev/sd[a-p](与SATA相同)</td>
</tr>
<tr>
<td style="text-align:center">软驱</td>
<td style="text-align:center">/dev/fd[0-1]</td>
</tr>
<tr>
<td style="text-align:center">打印机</td>
<td style="text-align:center">25针:/dev/lp[0-2]  ;  USB:/dev/usb/lp[0-15]</td>
</tr>
<tr>
<td style="text-align:center">鼠标</td>
<td style="text-align:center">USB:/dev/usb/mouse[0-15] ;  PS2:/de/pxaux</td>
</tr>
<tr>
<td style="text-align:center">当前CD ROM/DVD ROM</td>
<td style="text-align:center">/dev/cdrom</td>
</tr>
<tr>
<td style="text-align:center">当前鼠标</td>
<td style="text-align:center">/dev/mouse</td>
</tr>
<tr>
<td style="text-align:center">磁带机</td>
<td style="text-align:center">IDE:/dev/ht0  ;  SCSI:/dev/st0</td>
</tr>
</tbody>
</table>
<p>需要特别留意的是硬盘(IDE,SCSI,USB,SATA都一样)，每个磁盘驱动器的磁盘分区不同时,其磁盘文件名还会改变。以SATA/USB接口的磁盘为例，Linux内核会根据检测到磁盘的顺序来决定磁盘的设备文件名。</p>
<p>比如:<br>如果你的PC上面有两个SATA磁盘以及一个USB磁盘，而主板上面有六个SATA的插槽，这两个SATA磁盘分别安插在主板上的SATA1,SATA5插槽上，请问这三个磁盘在Linux中的设备文件名是什么？</p>
<ol>
<li>SATA1插槽上的文件名是:/dev/sda</li>
<li>SATA5插槽上的文件名是:/dev/sdb</li>
<li>USB磁盘(开机完成后才被系统识别):/dev/sdc</li>
</ol>
<h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title=" 磁盘分区"></a><a name="ch2"> 磁盘分区</a></h2><h3 id="磁盘的物理结构"><a href="#磁盘的物理结构" class="headerlink" title=" 磁盘的物理结构"></a><a name="ch2.1"> 磁盘的物理结构</a></h3><p>磁盘主要由盘片、机械手臂、磁头与主轴马达所组成。</p>
<ul>
<li>盘片：数据存储的物理结构,可以理解成光盘,磁盘由多个盘片叠加而成。</li>
<li>磁道：磁盘旋转时，磁头保持不动，在磁盘上划出的圆形轨道。</li>
<li>柱面：不同盘片的面，处于同一半径源的多个磁道组成的一个圆柱面。</li>
<li>扇区：将每个磁道等分为若干个弧段，这些弧段为扇区。每个扇区占512字节。<strong>其中磁盘的第一个扇区主要记录了两个重要的信息:</strong><ul>
<li>主引导分区(Master Boot Recode,MBR):可以安装引导加载程序的地方,有446字节。</li>
<li>分区表(Partition table):记录整块磁盘的分区状况，有64字节。</li>
</ul>
</li>
</ul>
<p><img src="https://github.com/HiKumho/blog/blob/master/img/blog_10_1.png?raw=true" alt=""></p>
<hr>
<h3 id="磁盘分区表"><a href="#磁盘分区表" class="headerlink" title=" 磁盘分区表"></a><a name="ch2.2"> 磁盘分区表</a></h3><p>所谓“分区”是指对分区表进行设置，在分区表所在的64字节容量中,最多只能容纳4个分区，这4个分区被称为主或扩展分区，每个分区以其的起始、结束的柱面号码为划分，一组的分区柱面号码占16字节，即<strong>一个分区信息用16字节表示</strong>，所在分区表最多只能容纳4个分区。而分区的最小单位是柱面。总结下：</p>
<ul>
<li>其实所谓的“”分区”只是针对那个64字节的分区表进行设置</li>
<li>磁盘的默认分区表最多能写入4组分区信息</li>
<li>这4组分区信息称为主或扩展分区</li>
<li>分区的最小单位是柱面</li>
</ul>
<p>为了记录更多的分区信息，我们可以利用扩展分区来建立逻辑分区，扩展分区的目的是使用额外的扇区来记录分区信息。注意<strong>逻辑分区的设备名称号码由5号开始</strong>，前面4个号码保留给主分区或扩展分区使用。总结下：</p>
<ul>
<li>主分区与扩展分区最多可以有4个(磁盘的限制)</li>
<li>扩展分区最多只能有一个(操作系统的限制)</li>
<li>逻辑分区是由扩展分区连续切割出来的分区</li>
<li>能够被格式化后作为数据访问的分区为主分区与逻辑分区，扩展分区无法格式化</li>
<li>逻辑分区的数量依操作系统而不同,Linux下，IDE硬盘最多有59个逻辑分区(5号到63号)，SATA硬盘则有11个逻辑分区(5号到15号)</li>
</ul>
<hr>
<h3 id="开机流程与主引导分区-MBR"><a href="#开机流程与主引导分区-MBR" class="headerlink" title=" 开机流程与主引导分区(MBR)"></a><a name="ch2.3"> 开机流程与主引导分区(MBR)</a></h3><p>整个开机流程到操作系统之前的动作如下：</p>
<ol>
<li>BIOS：开机主动执行的固件,会到硬盘中读取第一扇区的MBR。(硬件支持)</li>
<li>MBR：MBR包含引导加载程序。（硬件支持，安装操作系统时，操作系统会修改MBR）</li>
<li>引导加载程序(Boot loader)：一个读取操作系统内核文件来执行的软件。（操作系统在安装时提供）</li>
<li>内核文件：开始操作系统的功能。</li>
</ol>
<p>引导加载程序主要任务有以下：</p>
<ul>
<li>提供菜单：用户可以选择不同的开机选项，这也是多重引导的重要功能。</li>
<li>载入内核文件：直接指向可开机的程序区段来开始操作系统。</li>
<li>转交其他loader：将引导加载功能转交给其他loader负责。</li>
</ul>
<p>当你的计算机系统有两个以上的引导加载程序，我们可以使用多重引导。引导加载程序除了可以安装在MBR之外，还可以安装在每个分区的引导扇区。</p>
<p>举个例子：<br>假设你的计算机只有一块硬盘,里面分成4个分区，其中第1,2分区分别安装了Windows及Linux，你要如何在开机的时候选择用Windows还是Linux开机呢？假设MBR内安装的是同时识别Windows/Linux操作系统的引导加载程序，那么整个流程如下:</p>
<p><img src="https://github.com/HiKumho/blog/blob/master/img/blog_10_2.gif?raw=true" alt=""></p>
<hr>
<h3 id="文件系统与目录树"><a href="#文件系统与目录树" class="headerlink" title=" 文件系统与目录树"></a><a name="ch2.4"> 文件系统与目录树</a></h3><ul>
<li>目录树结构<br>Linux所有数据都是以文件形态来呈现的，整个Linux系统重要的地方就是在于目录树结构，所谓目录树结构就是以根目录(表示方法为‘’/‘’)为主，然后向下呈现分支状的目录结构的一种文件结构。整个系统只有一个目录树。<br><strong>我们文件数据其实是放置在磁盘分区当中的</strong>，现在的问题是如何结合目录树的架构与磁盘内数据，这就是<strong>挂载</strong>的概念了</li>
<li>文件系统与目录树的关系(挂载)<br>挂载就是利用一个目录当成进入点，将磁盘分区的数据放置在该目录下。进入点的目录我们称为<strong>挂载点</strong>。Linux最重要的是根目录，因此根目录一定要挂载到某个分区。</li>
</ul>
<h2 id="主机硬盘的规划"><a href="#主机硬盘的规划" class="headerlink" title=" 主机硬盘的规划"></a><a name="ch3"> 主机硬盘的规划</a></h2><h3 id="基本硬盘分区模式"><a href="#基本硬盘分区模式" class="headerlink" title=" 基本硬盘分区模式"></a><a name="ch3.1"> 基本硬盘分区模式</a></h3><ul>
<li>最简单的分区方法<br>仅分出根目录与内存交换空间(Swap)，然后再预留一些剩余磁盘以供后续练习之用。</li>
<li>稍微麻烦一点的方式<ul>
<li>/</li>
<li>/usr (程序安装)</li>
<li>/home (用户主目录基点)</li>
<li>/var (经常变动的数据)</li>
<li>Swap</li>
</ul>
</li>
</ul>
<p>详细请查看<a href="https://github.com/HiKumho/blog/blob/master/Liunx%E5%90%84%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E4%BD%9C%E7%94%A8(%E8%BD%AC%E8%BD%BD" target="_blank" rel="external">Liunx各目录作用</a>.md)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 安装JDK]]></title>
      <url>http://yoursite.com/2016/09/05/Linux-%E5%AE%89%E8%A3%85JDK/</url>
      <content type="html"><![CDATA[<h2 id="直接下载jdk压缩包方式安装"><a href="#直接下载jdk压缩包方式安装" class="headerlink" title="直接下载jdk压缩包方式安装"></a>直接下载jdk压缩包方式安装</h2><p>分为下面5个步骤</p>
<ol>
<li>官网下载JDK</li>
<li>解压缩,放到指定目录</li>
<li>配置环境变量</li>
<li>设置系统默认JDK</li>
<li>测试JDK</li>
</ol>
<h3 id="官网下载JDK"><a href="#官网下载JDK" class="headerlink" title="官网下载JDK"></a>官网下载JDK</h3><p>网址: <a href="http://www.oracle.com/technetwork/articles/javase/index-jsp-138363.html" target="_blank" rel="external">http://www.oracle.com/technetwork/articles/javase/index-jsp-138363.html</a><br>选择相应的 .gz包下载  (这里我选择了”jdk-8u92-linux-i586.tar.gz”)</p>
<h3 id="解压缩-放到指定目录-以jdk-8u92-linux-i586-tar-gz为例"><a href="#解压缩-放到指定目录-以jdk-8u92-linux-i586-tar-gz为例" class="headerlink" title="解压缩,放到指定目录(以jdk-8u92-linux-i586.tar.gz为例)"></a>解压缩,放到指定目录(以jdk-8u92-linux-i586.tar.gz为例)</h3><ol>
<li><p>创建目录<br><code>sudo mkdir /home/kumho/usr/lib/jvm</code>    </p>
</li>
<li><p>解压文件至目录<br><code>sudo tar -zxvf jdk-8u92-linux-i586.tar.gz -C  /home/kumho/usr/lib/jvm</code>      </p>
</li>
</ol>
<h3 id="修改环境变量"><a href="#修改环境变量" class="headerlink" title="修改环境变量"></a>修改环境变量</h3><p><code>sudo vim ~/.bashrc</code><br>文件的末尾追加下面内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#set oracle jdk environment </div><div class="line">export JAVA_HOME=/home/kumho/usr/lib/jvm/jdk1.8.0_92  ##这里要注意目录要换成自己解压的jdk 目录</div><div class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre </div><div class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</div><div class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</div></pre></td></tr></table></figure></p>
<p>使环境变量马上生效<code>source ~/.bashrc</code>    </p>
<h3 id="设置系统默认jdk-版本"><a href="#设置系统默认jdk-版本" class="headerlink" title="设置系统默认jdk 版本"></a>设置系统默认jdk 版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo update-alternatives --install /usr/bin/java java /home/kumho/usr/lib/jvm/jdk1.8.0_92/bin/java 300</div><div class="line">sudo update-alternatives --install /usr/bin/javac javac /home/kumho/usr/lib/jvm/jdk1.8.0_92/bin/javac 300</div><div class="line">sudo update-alternatives --install /usr/bin/jar jar /home/kumho/usr/lib/jvm/jdk1.8.0_92/bin/jar 300</div><div class="line">sudo update-alternatives --install /usr/bin/javah javah /home/kumho/usr/lib/jvm/jdk1.8.0_92/bin/javah 300</div><div class="line">sudo update-alternatives --install /usr/bin/javap javap /home/kumho/usr/lib/jvm/jdk1.8.0_92/bin/javap 300</div></pre></td></tr></table></figure>
<p>然后执行:<br><code>sudo update-alternatives --config java</code><br>若是初次安装jdk,会有下面的提示<br> There is only one alternative in link group java (providing /usr/bin/java):<br> /home/kumho/usr/lib/jvm/jdk1.8.0_92/bin/java<br>否则,选择合适的jdk</p>
<h3 id="测试jdk"><a href="#测试jdk" class="headerlink" title="测试jdk"></a>测试jdk</h3><p><img src="https://github.com/HiKumho/blog/blob/master/img/blog_9_1.png?raw=true" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android FQA]]></title>
      <url>http://yoursite.com/2016/09/05/Android-FQA/</url>
      <content type="html"><![CDATA[<!--
## Index
- <a href="#q1"> Android:id设置的三种方式区别?</a>
- <a href="#q2"> Android程序级权限与组件级权限的区别</a>
- <a href="#q3"> Activity、Window、View的关系</a>
- <a href="#q4"> 关于9-patch的使用</a>
- <a href="#q5"> ListView怎么隐藏滚动条?</a>
- <a href="#q6"> 关于同区域两个组件设置了类似的监听器,哪个作用?</a>
- <a href="#q7"> 怎么引用当前主题的属性值</a>
-->
<h3 id="Android-id设置的三种方式区别"><a href="#Android-id设置的三种方式区别" class="headerlink" title=" Android:id设置的三种方式区别?"></a><a name="q1"> Android:id设置的三种方式区别?</a></h3><p>对Android控制设置id,通常有以下三种方式:</p>
<blockquote>
<ul>
<li>android:id=”@+id/btn”</li>
<li>android:id=”@id/btn”</li>
<li>android:id=”@android:id/button1”         </li>
</ul>
</blockquote>
<h4 id="android-id-”-id-btn”"><a href="#android-id-”-id-btn”" class="headerlink" title="android:id=”@+id/btn”"></a>android:id=”@+id/btn”</h4><p>表示在R.java资源文件中新增一个id为btn的控件索引</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">id</span> </span>&#123;</div><div class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> btn =<span class="number">0x7f0b0056</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>代码获取方式:findViewById(R.id.btn);</p>
<h4 id="android-id-”-id-btn”-1"><a href="#android-id-”-id-btn”-1" class="headerlink" title="android:id=”@id/btn”"></a>android:id=”@id/btn”</h4><p>表示使用R.java资源文件中已存在的id为btn的索引<br>代码获取方式:跟1一样</p>
<h4 id="android-id-”-android-id-button1”"><a href="#android-id-”-android-id-button1”" class="headerlink" title="android:id=”@android:id/button1”"></a>android:id=”@android:id/button1”</h4><p>表示使用的是系统已有的ID，在对应的sdk目录下的ids.xml里面(如Sdk/platforms/android-21/data/res/values/ids.xml) ,一般只去引用其ID,不直接使用其ID作为自己App控件索引<br>代码中获取方式:android.R.id.button1</p>
<h4 id="在ids-xml中添加自己的Id组"><a href="#在ids-xml中添加自己的Id组" class="headerlink" title="在ids.xml中添加自己的Id组"></a>在ids.xml中添加自己的Id组</h4><p> 我们可以在values下新建ids.xml,然后写入id项,便于方式2使用.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;resources&gt;</div><div class="line">    &lt;item name=&quot;btn_1&quot; type=&quot;id&quot;&gt;&lt;/item&gt;</div><div class="line">    &lt;item name=&quot;btn_2&quot; type=&quot;id&quot;&gt;&lt;/item&gt;</div><div class="line">&lt;/resources&gt;</div></pre></td></tr></table></figure>
<h4 id="当同个layout布局文件中-多个组件使用同一个id的问题"><a href="#当同个layout布局文件中-多个组件使用同一个id的问题" class="headerlink" title="当同个layout布局文件中,多个组件使用同一个id的问题"></a>当同个layout布局文件中,多个组件使用同一个id的问题</h4><p>当我们调用<code>findViewById(int id)</code>被引用的是第一个使用此id的控件</p>
<h3 id="Android程序级权限与组件级权限的区别"><a href="#Android程序级权限与组件级权限的区别" class="headerlink" title=" Android程序级权限与组件级权限的区别"></a><a name="q2"> Android程序级权限与组件级权限的区别</a></h3><h4 id="程序组权限"><a href="#程序组权限" class="headerlink" title="程序组权限"></a>程序组权限</h4><p>程序运行时所需要的权限 通过在<code>&lt;manifest&gt;</code>元素下添加<code>&lt;usespermission&gt;</code>为程序本身声明权限       </p>
<h4 id="组件级权限"><a href="#组件级权限" class="headerlink" title="组件级权限"></a>组件级权限</h4><p>程序各组件可以被其他程序调用,此时该组件声明所需的权限.通过在<code>&lt;activity&gt;``&lt;service&gt;</code>等元素下添加<code>&lt;usespermission&gt;</code>为组件声明权限.</p>
<h3 id="Activity、Window、View的关系"><a href="#Activity、Window、View的关系" class="headerlink" title=" Activity、Window、View的关系"></a><a name="q3"> Activity、Window、View的关系</a></h3><p>详细问题描述:<a href="http://www.cnblogs.com/loulijun/archive/2012/02/09/2344681.html" target="_blank" rel="external">原文链接</a>        </p>
<h4 id="View和ViewGroup"><a href="#View和ViewGroup" class="headerlink" title="View和ViewGroup"></a>View和ViewGroup</h4><p>Android系统中的所有UI类都是建立在View和ViewGroup这两个类的基础上的。所有View的子类成为”Widget”，所有ViewGroup的子类成为”Layout”。View和ViewGroup之间采用了组合设计模式，可以使得“部分-整体”同等对待。ViewGroup作为布局容器类的最上层，布局容器里面又可以有View和ViewGroup。         </p>
<h4 id="LayoutInflater，LayoutInflater-inflate"><a href="#LayoutInflater，LayoutInflater-inflate" class="headerlink" title="LayoutInflater，LayoutInflater.inflate()"></a>LayoutInflater，LayoutInflater.inflate()</h4><p>LayoutInflater是一个用来实例化XML布局文件为View对象的类</p>
<p>LayoutInflater.infalte(R.layout.test,null)用来从指定的XML资源中填充一个新的View</p>
<h4 id="Activity、Window、View之间的关系"><a href="#Activity、Window、View之间的关系" class="headerlink" title="Activity、Window、View之间的关系"></a>Activity、Window、View之间的关系</h4><p>而当我们运行程序的时候，有一个setContentView()方法，Activity其实不是显示视图（直观上感觉是它），实际上Activity调用了PhoneWindow的setContentView()方法，然后加载视图，将视图放到这个Window上，而Activity其实构造的时候初始化的是Window（PhoneWindow），Activity其实是个控制单元，即可视的人机交互界面。</p>
<p>打个比喻：</p>
<p>Activity是一个工人，它来控制Window；Window是一面显示屏，用来显示信息；View就是要显示在显示屏上的信息，这些View都是层层重叠在一起（通过infalte()和addView()）放到Window显示屏上的。而LayoutInfalter就是用来生成View的一个工具，XML布局文件就是用来生成View的原料</p>
<p>再来说说代码中具体的执行流程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">setContentView(R.layout.main)其实就是下面内容。</div><div class="line">getWindow().setContentView(LayoutInflater.from(this).inflate(R.layout.main, null))</div></pre></td></tr></table></figure>
<p>即运行程序后，Activity会调用PhoneWindow的setContentView()来生成一个Window，而此时的setContentView就是那个最底层的View。然后通过LayoutInflater.infalte()方法加载布局生成View对象并通过addView()方法添加到Window上，（一层一层的叠加到Window上）</p>
<p>所以，Activity其实不是显示视图，View才是真正的显示视图</p>
<p>注：一个Activity构造的时候只能初始化一个Window(PhoneWindow)，另外这个PhoneWindow有一个”ViewRoot”，这个”ViewRoot”是一个ViewGroup，是最初始的根视图，然后通过addView方法将View一个个层叠到ViewRoot上，这些层叠的View最终放在Window这个载体上面</p>
<h3 id="关于9-patch的使用"><a href="#关于9-patch的使用" class="headerlink" title=" 关于9-patch的使用"></a><a name="q4"> 关于9-patch的使用</a></h3><p>学习<a href="http://leoray.leanote.com/post/android-9-patch" target="_blank" rel="external">9-pathch笔记</a><br>从上面的文章,我们可以知道Android显示9-patch的内容区域是在图片上设置padding,如果我们在引用这张图片的组件上再设置padding的话,9-patch的padding就会失效,达不到需要的效果.</p>
<p>注意:Android Studio使用minmap代替drawable目录,9-patch图片在minmap目录,引用9-patch图片时会报错(AS支持问题)<br>解决方法1:9-patch图片放在drawable<br>解决方法2:修复9-patch的bad-patches区域(show bad patches出来的红色线区)</p>
<h3 id="ListView怎么隐藏滚动条"><a href="#ListView怎么隐藏滚动条" class="headerlink" title=" ListView怎么隐藏滚动条?"></a><a name="q5"> ListView怎么隐藏滚动条?</a></h3><p>设置andriod:scrollbars=”none”即可</p>
<h3 id="关于同区域两个组件设置了类似的监听器-哪个作用"><a href="#关于同区域两个组件设置了类似的监听器-哪个作用" class="headerlink" title=" 关于同区域两个组件设置了类似的监听器,哪个作用?"></a><a name="q6"> 关于同区域两个组件设置了类似的监听器,哪个作用?</a></h3><p>是最上层的组件的监听器响应.<br>比方说,父组件设置点击监听,子组件也设置了点击监听,在子组件的区域里,点击是子组件响应,在子组件外的区域里,点击是父组件响应</p>
<h3 id="怎么引用当前主题的属性值"><a href="#怎么引用当前主题的属性值" class="headerlink" title=" 怎么引用当前主题的属性值"></a><a name="q7"> 怎么引用当前主题的属性值</a></h3><p>要引用样式属性，名称语法几乎与普通资源格式完全相同，只不过将 at 符号 (@) 改为问号 (?)，资源类型部分为可选项。比如,下面例子中,Android将会使用当前主题的android:textColorSecondary的属性值设置组件的textColor</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:textColor=&quot;?android:textColorSecondary&quot;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux FQA]]></title>
      <url>http://yoursite.com/2016/09/05/Linux-FQA/</url>
      <content type="html"><![CDATA[<!--
### Index
1. <a href="#q1">查看主机内核版本</a>
2. <a href="#q2">进入root文件夹</a>
3. <a href="#q3">终端显示乱码</a>
4. <a href="#q4">重启X Window的方法</a>
5. <a href="#q5">图形界面与终端界面切换</a>
6. <a href="#q6">命令基本格式</a>
7. <a href="#q7">nano文本编辑器</a>
8. <a href="#q8">shutdown</a>
9. <a href="#q9">修改终端模式欢迎信息</a>
10. <a href="#q10">设置环境变量LANG</a>
11. <a href="#q11"> 关于cp的一个疑问?(待解决)</a>
12. <a href="#q12">删除了用户的主目录,进入不了该用户的图形界面环境</a>
13. <a href="#q13">Vim解决中文乱码的问题</a>
14. <a href="#q14">Shell 中判断符号[]使用的问题</a>
15. <a href="#q15">grub > unknow filesystem的解决方法</a>
16. <a href="#q16">忘记root密码的解决方法</a>
17. <a href="#q17">init的配置文件错误,无法启动系统</a>
18. <a href="#q18">如何切换操作系统(不能重启)</a>
19. <a href="#q19">查看打印机是否支持Linux</a>
20. <a href="#q20">修改主机名</a>
21. <a href="#q21">Ubuntu14.04下SublimeText3不能输中文</a>
-->
<h3 id="查看主机内核版本"><a href="#查看主机内核版本" class="headerlink" title=" 查看主机内核版本"></a><a name="q1"> 查看主机内核版本</a></h3><p>使用命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat  /proc/version</div></pre></td></tr></table></figure></p>
<h3 id="进入root文件夹"><a href="#进入root文件夹" class="headerlink" title=" 进入root文件夹"></a><a name="q2"> 进入root文件夹</a></h3><p>使用命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nautilus</div></pre></td></tr></table></figure></p>
<h3 id="终端显示乱码"><a href="#终端显示乱码" class="headerlink" title=" 终端显示乱码"></a><a name="q3"> 终端显示乱码</a></h3><p>终端默认情况下不能显示中文,刚好我们终端最优先是显示zh.CN的话,那么显示英文也会乱码,解决方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">1. 查看目前支持的语言</div><div class="line">$ echo &amp;LANG</div><div class="line">zh_CN.UTF-8</div><div class="line"></div><div class="line">2. 修改语言为UTF-8和en_US</div><div class="line">$ LANG=UTF-8.en_US</div></pre></td></tr></table></figure></p>
<h3 id="重启X-Window的方法"><a href="#重启X-Window的方法" class="headerlink" title=" 重启X Window的方法"></a><a name="q4"> 重启X Window的方法</a></h3><ul>
<li>直接注销,然后再重新登陆</li>
<li>X Window界面中按下[Ctrl]+[Alt]+[Backspace]</li>
</ul>
<h3 id="图形界面与终端界面切换"><a href="#图形界面与终端界面切换" class="headerlink" title=" 图形界面与终端界面切换"></a><a name="q5"> 图形界面与终端界面切换</a></h3><p>终端可以理解成独立设备,Linux会提供5到6个的虚拟终端界面给用户.其与图形界面的切换方式如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[Ctrl]+[Alt]+[F1]~[F6]:登录tty1~tty6终端;(通常情况下是F1~F6,可是我的CentOS6.8是F2~F6)</div><div class="line">[Ctrl]+[Alt]+[F7]:登录图形界面(我的CentOS6.8是F1)</div></pre></td></tr></table></figure></p>
<h3 id="命令基本格式"><a href="#命令基本格式" class="headerlink" title=" 命令基本格式"></a><a name="q6"> 命令基本格式</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$      command      [-opt|--options]    parmeter1   parameter2 ...</div><div class="line"> 命令/可执行文件         -选项|--完整选项名       参数1       参数2</div></pre></td></tr></table></figure>
<ul>
<li>如果命令太长,可以用\来转义[Enter]</li>
<li>[TAB]:补齐命令或文件名</li>
<li>[Ctrl]+C:命令执行中断(通常中断程序级命令)</li>
<li>[Ctrl]+D:键盘输入结束/退出程序/命令行模式注销用户~exit</li>
<li>[TAB][TAB]:可以查看系统所有命令</li>
</ul>
<h3 id="nano文本编辑器"><a href="#nano文本编辑器" class="headerlink" title=" nano文本编辑器"></a><a name="q7"> nano文本编辑器</a></h3><p>nano编辑器可以用在命令行模式下,执行命令<code>$ nano</code>启动nano,根据提示操作</p>
<h3 id="shutdown"><a href="#shutdown" class="headerlink" title=" shutdown"></a><a name="q8"> shutdown</a></h3><p>通常我们关机前会使用多次<code>sync</code>命令将数据同步写入硬盘中(Linux<br>为了加速数据读取,某些已加载内存中的数据不直接写会硬盘,而是暂存内存中)</p>
<p><strong>关机命令:shutdown</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ shutdown [-arkhncfF] 时间 [警告信息]</div></pre></td></tr></table></figure></p>
<blockquote>
<ul>
<li>-k:只发送警告信息,不是真关机</li>
<li>-r:在将系统服务停掉后重启(常用)</li>
<li>-h:将系统服务停掉后关机(常用)</li>
<li>-n:不经过init程序,直接以shutdown功能来关机</li>
<li>-f:关机并开机后,强制略过fsck的磁盘检查</li>
<li>-F:系统重启之后,强制你行fsck磁盘检查</li>
<li>-c:取消计划</li>
</ul>
</blockquote>
<p>例子:</p>
<blockquote>
<ul>
<li>shutdown -h 0                      //立刻关机</li>
<li>shutdown -h 20:25              //今天的20:25会关机</li>
<li>shutdown -h 10                   //10分钟后关机</li>
<li>shutdown -r 30 ‘The system will reboot’   //30分钟后重启</li>
</ul>
</blockquote>
<h3 id="修改终端模式欢迎信息"><a href="#修改终端模式欢迎信息" class="headerlink" title=" 修改终端模式欢迎信息"></a><a name="q9"> 修改终端模式欢迎信息</a></h3><p>1.  打开终端欢迎信息文件<code>/etc/issue</code><br>在终端模式下可以使用nano/vim文本编辑器打开<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># nano /etc/issue</div></pre></td></tr></table></figure></p>
<p>2. /etc/issue中的占位符<br>如果需要使用占位符,可以man查询下agetty的<code>ISSUE ESCAPES</code>项的各参数</p>
<h3 id="设置环境变量LANG"><a href="#设置环境变量LANG" class="headerlink" title="  设置环境变量LANG"></a><a name="q10">  设置环境变量LANG</a></h3><p>在终端上使用<code>ls -al</code>,发现中文目录都出现”???”,参考<a href="#q3">问题3. 终端显示乱码</a>还是没有解决,而且设置的LANG还是一关机后或者切换到其他终端就不用作用的,于是设置环境变量LANG</p>
<p>1.  设置环境变量LANG<br>在/etc/sysconfig/i18n上修改或添加LANG=“UTF-8.en_US”<br>注:上面是CentOS的locale环境变量设置,Ubuntu在/etc/default/locale中设置</p>
<p>2.  设置环境变量LANG=“UTF-8.en_US”时<br>遇到以下错误：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">warning: setlocale: LC_CTYPE: cannot change locale (UTF-8.en_US) </div><div class="line">warning: Setting locale failed.</div></pre></td></tr></table></figure>
<p>解决方法：这里我将环境变量LANG中的UTF-8去掉了。</p>
<p>3. 之后修改系统语系为English,并将中文目录更新为英文</p>
<h3 id="关于cp的一个疑问-待解决"><a href="#关于cp的一个疑问-待解决" class="headerlink" title=" 关于cp的一个疑问?(待解决)"></a><a name="q11"> 关于cp的一个疑问?(待解决)</a></h3><p>遇到的问题:<br>今天将<code>/root/AndroidStudioProjects/TextProject</code>项目复制到 <code>/media/kumho/文档/Github/</code><br>root使用命令<code>cp -a ~/AndroidStudioProjects/TextProject /media/kumho/文档/Github/</code>,发现目标目录的用户/用户组全部更改成kumho,权限也被修改成700,这里好奇怪原目录的用户/用户组是root,权限是755</p>
<p>明明 <code>cp -a</code>会将目录及子文件的属性都进行复制,为什么目标目录会被修改?</p>
<p>这里查看了<code>/media/kumho</code>的文件属性<code>drwxr-x---+ 4 root root 4096  7月 19 17:27 /media/kumho</code> 发现文件权限后有个<code>+</code>,表示不解(貌似是ACL权限控制)</p>
<h3 id="删除了用户的主目录-进入不了该用户的图形界面环境"><a href="#删除了用户的主目录-进入不了该用户的图形界面环境" class="headerlink" title=" 删除了用户的主目录,进入不了该用户的图形界面环境"></a><a name="q12"> 删除了用户的主目录,进入不了该用户的图形界面环境</a></h3><p>今天不小心将/home目录删除了(自打100下…..),之后发觉进入不了相关用户的图形界面环境<br>解决方法:进入终端,使用root,创建用户的主目录/home/用户名,并修改此文件的所有者与用户组为该用户</p>
<h3 id="Vim解决中文乱码的问题"><a href="#Vim解决中文乱码的问题" class="headerlink" title=" Vim解决中文乱码的问题"></a><a name="q13"> Vim解决中文乱码的问题</a></h3><p>我将vim的编码都设置成utf8,可以解决中文乱码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">set encoding=utf-8             &quot;Vim内部使用的字符编码,比如脚本中的字符串,buffer,寄存器等</div><div class="line">set termencoding=utf-8     &quot;Vim用于屏幕显示的编码,显示时Vim将内部编码转出屏幕编码</div><div class="line">set fileencoding=utf-8     &quot;Vim保存文件时的编码格式</div><div class="line">set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1 &quot;Vim识别文件编码格式的识别序列，应当按照从严格到宽松的角度来摆放</div></pre></td></tr></table></figure></p>
<p>参考学习<br><a href="http://edyfox.codecarver.org/html/vim_fileencodings_detection.html" target="_blank" rel="external">Vim文件编码识别与乱码处理</a></p>
<h3 id="Shell-中判断符号-使用的问题"><a href="#Shell-中判断符号-使用的问题" class="headerlink" title=" Shell 中判断符号[]使用的问题"></a><a name="q14"> Shell 中判断符号[]使用的问题</a></h3><p>判断符号[]使用有些麻烦,必须在几个地方插入空格(□)才行,比如下面的例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[□&quot;Hello World&quot;□==□&quot;Hello&quot;□-o□&quot;$Test&quot;□!=□&quot;Test&quot;□]</div></pre></td></tr></table></figure></p>
<p>就是要在变量/常量/判断符两边加上空格(□)<br>如果确认编写无误后,还报出”unexpected operator” 可能是shell的原因<br>比如 ubuntu中的sh -&gt; /bin/dash ,其中 /bin/dash不支持 <code>==</code><br>解决方法:</p>
<ol>
<li>将sh -&gt; /bin/bash : sudo dpkg-reconfigure dash   选NO</li>
<li>使用/bin/dash : 用<code>=</code>代替<code>==</code></li>
</ol>
<h3 id="grub-gt-unknow-filesystem的解决方法"><a href="#grub-gt-unknow-filesystem的解决方法" class="headerlink" title=" grub &gt; unknow filesystem的解决方法"></a><a name="q15"> grub &gt; unknow filesystem的解决方法</a></h3><p>Linux安装时分配的空间过少,而且还乱分区,所以今天想整合下分区,把没弄的分区删去.</p>
<p>我的根目录挂载了/dev/sda9,前面还有个/dev/sda8没有使用(df -hl 中并没有挂载/dev/sda8).于是将其删除,<br>但重启系统时,遇到 <code>grub &gt; unknow filesystem</code> 的问题</p>
<p>我想是系统找不到/boot了(我的/boot没有独立分区),可能是因为根目录挂载变成/dev/sda8的原因.</p>
<p>这样查到了网上的解决方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">grub rescue &gt; ls   # 查看系统分区情况</div><div class="line">我这里列出了(hd0,msdos9),(hd0,msdos8)等</div><div class="line"></div><div class="line">grub rescue &gt; set root=(hd0,msdos8)  # 指向根目录</div><div class="line"></div><div class="line">grub rescue &gt; set prefix=(hd0,msdos8)/boot/grub  # 指定boot位置</div><div class="line"></div><div class="line">grub rescue &gt; insmod normal # 这命令不太懂</div><div class="line"></div><div class="line">grub rrescue &gt; normal #进入了平常的grub</div></pre></td></tr></table></figure></p>
<p>这里进入系统后, 下次重启时还会出现这种情况(治标不治本),于是用了boot-repair工具修复<br>下面是安装并启动boot-repair<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">add-apt-repository ppa:yannubuntu/boot-repair &amp;&amp; apt-get update</div><div class="line">apt-get install -y boot-repair &amp;&amp; boot-repair</div></pre></td></tr></table></figure></p>
<p>问题解决.<br>其实也可以直接用LIVE-CD启动系统,再用boot-repair解决(今天U盘刚好找不到了)</p>
<h3 id="忘记root密码的解决方法"><a href="#忘记root密码的解决方法" class="headerlink" title=" 忘记root密码的解决方法"></a><a name="q16"> 忘记root密码的解决方法</a></h3><ol>
<li>启动系统,进入boot loader启动菜单编辑,在内核项最后添加single</li>
<li>进入单用户维护模式,取得了root的shell</li>
<li>利用passwd修改密码</li>
</ol>
<p>或者用启动盘启动系统,再挂载其原系统,利用chroot来改变工作中的系统,切换到原系统,利用passwd修改</p>
<h3 id="init的配置文件错误-无法启动系统"><a href="#init的配置文件错误-无法启动系统" class="headerlink" title=" init的配置文件错误,无法启动系统"></a><a name="q17"> init的配置文件错误,无法启动系统</a></h3><ol>
<li>启动系统,进入boot loader启动菜单编辑,在内核项最后添加init=/bin/bash</li>
<li>启动root的shell后再去修改init的配置文件(可能要重新挂载根目录,使其成可读写状态)</li>
</ol>
<h3 id="如何切换操作系统-不能重启"><a href="#如何切换操作系统-不能重启" class="headerlink" title=" 如何切换操作系统(不能重启)"></a><a name="q18"> 如何切换操作系统(不能重启)</a></h3><ol>
<li>先在原先的操作系统中新建一个目录,比如/croot</li>
<li>将目标操作系统的各个分区先挂载起来,需要建立各分区对应的文件,如/croot/usr /croot/home等</li>
<li>使用chroot切换操作系统 <code>chroot /croot</code></li>
</ol>
<h3 id="查看打印机是否支持Linux"><a href="#查看打印机是否支持Linux" class="headerlink" title=" 查看打印机是否支持Linux"></a><a name="q19"> 查看打印机是否支持Linux</a></h3><p><a href="https://wiki.linuxfoundation.org/" target="_blank" rel="external">https://wiki.linuxfoundation.org/</a> 下的openprinting条目</p>
<h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title=" 修改主机名"></a><a name="q20"> 修改主机名</a></h3><p>修改<code>/etc/hostname(Ubuntu)</code>或<code>/etc/sysconfig/network</code> 之后还有修改<code>/etc/hosts</code>相应的条目</p>
<h3 id="Ubuntu14-04下SublimeText3不能输中文"><a href="#Ubuntu14-04下SublimeText3不能输中文" class="headerlink" title=" Ubuntu14.04下SublimeText3不能输中文"></a><a name="q21"> Ubuntu14.04下SublimeText3不能输中文</a></h3><p>我是查找了此网友的方法<a href="http://www.jianshu.com/p/bf05fb3a4709" target="_blank" rel="external">解决Ubuntu下Sublime Text 3无法输入中文</a></p>
<p>但是不能解决,继续折腾后</p>
<p>解决方法：</p>
<ol>
<li>在sublimeText3官网下*.deb包,源码编译出来的sublimeText解决有点绕</li>
<li>下载此网友的github库<a href="https://github.com/lyfeyaj/sublime-text-imfix" target="_blank" rel="external">sublime-text-imfix</a>,安装其步骤来</li>
<li>最后遇到问题<code>ERROR: ld.so: object &#39;/opt/sublime_text/libsublime-imfix.so&#39; from LD_PRELOAD cannot be preloaded (wrong ELF class: ELFCLASS64): ignored.</code></li>
<li>这里要重新编译出<code>libsublime-imfix.so</code>库,放到<code>/opt/sublime_text/</code>下,编译步骤<ol>
<li>先在下好的github库目录下找到<code>src/sublime-imfix.c</code>,对其进行编译</li>
<li>确认安装了C/C++ 的编译环境和 gtk libgtk2.0-dev,<code>sudo apt-get install build-essential&amp;&amp;sudo apt-get install libgtk2.0-dev</code><ul>
<li>发现<code>libgtk2.0-dev</code>依赖有问题(啊！！你还玩我) 解决方法是用<code>aptitude install ibgtk2.0-dev</code>,其会提供依赖解决方法,我选择的是将依赖包降级安装</li>
</ul>
</li>
<li><code>gcc -shared -o libsublime-imfix.so sublime_imfix.c</code>pkg-config –libs –cflags gtk+-2.0<code>-fPIC</code> 编译出<code>libsublime-imfix.so</code></li>
</ol>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 卸载多系统中的linux]]></title>
      <url>http://yoursite.com/2016/09/05/Linux-%E5%8D%B8%E8%BD%BD%E5%A4%9A%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84linux/</url>
      <content type="html"><![CDATA[<p>前段时间决定要系统学习Linux，于是想把很久前安装在电脑上的ubuntu卸装再安装linux mint(这也是ubuntu冏rz)，当安装完linux mint 17的64位系统时它将原本的ubuntu覆盖掉了，在编译C程序时发觉少了库文件，再安装发觉问题没有解决，于是再安装了mint的32位系统，于是产生mint 32位、64位系统和win7共存的情况，最后决定卸装mint 64位系统。<br>教程<a href="http://www.cnblogs.com/woshijpf/p/3835659.html" target="_blank" rel="external">一台电脑上含有多个ubuntu系统的卸载方法</a><br><a id="more"></a></p>
<h2 id="查看linux系统的分区情况"><a href="#查看linux系统的分区情况" class="headerlink" title="查看linux系统的分区情况"></a>查看linux系统的分区情况</h2><p>分别进入两个linux系统，进入控制台，输入命令“sudo df -hl”查看文件系统的挂在情况，之前我操作时没有截图，现在使用教程中的截图。<br>例如：原作者的32位系统的文件系统的挂载情况是这样的：<br><img src="https://raw.githubusercontent.com/HiKumho/blog/master/img/blog_5_1.jpg" alt=""></p>
<p>我的32系统没有/boot和/home分区，应该是安装系统时没有设置好。先继续往下走</p>
<p>我们可以看到原作者这个系统的挂载情况是：<br>/ （根文件目录）                             挂载在了/dev/sda10上面<br>/boot  （启动文件目录）                 挂载在了/dev/sda8上面<br>/home  (用户主目录)                       挂载在了/dev/sda11上面<br>安装系统时还分配了一个swap（交换分区），在这里我们并没有看到啊，但是，我们可以输入命令“sudo  fdisk   -l”查看整个硬盘的分区情况<br>在这里我们看到的/dev/sda9 就是我这个32位系统对应的交换分区。<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_2.jpg?raw=true" alt=""></p>
<p>我们记下根目录、/boot、/home、/swap内存块(Blocks)大小。这里要换算单位，Blocks里单位是字节，需要换算成GB，方便我们下面比较。换算公式：1GB=1024*1024B。64位系统也要这样记录。</p>
<p>同理我们进入64位的系统的文件系统的挂载情况是：<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_3.jpg?raw=true" alt=""></p>
<h2 id="删除GRUB-恢复Window引导"><a href="#删除GRUB-恢复Window引导" class="headerlink" title="删除GRUB 恢复Window引导"></a>删除GRUB 恢复Window引导</h2><p>接下来，我们就重启电脑，进入windows系统。由于我安装的三系统是由Ubuntu系统的GRUB来引导的，它把启动信息写入到了磁盘的MBR（磁盘中的一小块区域负责引导系统启动用的）中。（如果你的电脑一开机就进入到了GRUB菜单，说明的GRUB的确写入到了MBR中）</p>
<p>接下来主要进行的就是删除GRUB的操作</p>
<ol>
<li>进入windows 7系统，下载一个MbrFix的修复软件，放在、C:\windows\System32文件夹中。</li>
<li>按“windows键+R”，然后输入cmd回车，就可以进入了命令行提示符界面。</li>
<li>在命令行提示符界面中我们输入 MbrFix      /drive  0  fixmbr  回车(这里你可能需要进入MbfFix所在的文件夹内)<br>这时候，屏幕上会提示你是否进行修复的询问？你输入 y或者yes回车确认就可以了。如果什么也不出现了，只是显示命令行的提示符而已时，说明你的MBR修复好了。</li>
<li>重启电脑，如果你的电脑没有出现GRUB菜单，直接进入windows系统则说明你真正地修复成功了。</li>
</ol>
<h2 id="删除Linux分区"><a href="#删除Linux分区" class="headerlink" title="删除Linux分区"></a>删除Linux分区</h2><p>接下来我们就该删除我们不想要linux系统的分区了，我这儿的例子是删除我电脑了不想要的的64位的Ubuntu系统。</p>
<ol>
<li>计算机右键单击–&gt;&gt;管理–&gt;&gt;存储–&gt;&gt;磁盘管理，这样我们就进入了磁盘管理的界面</li>
<li>我们可以在下面的磁盘管理图中看到，没有C,D,E,F,卷标之类的区域，没错，我们终于找到了linux的磁盘空间。下图就是我电脑的情况：<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_4.png?raw=true" alt=""></li>
</ol>
<p>其中画红线的区域就是两个Ubuntu系统所占的空间。</p>
<p>但是哪一个才是64位Ubuntu系统所占的磁盘空间呢。我们得看第一步中的几个图了。通过第一步中的第二、第三个图我们可以知道，64的Ubuntu系统就占的是设备块/dev/sda12/（14.9GB）,/dev/sda13/（1.86GB）,/dev/sda14/（190MB）,/dev/sda15/（13.32GB）。。有木有发现，我下图绿色圈起来的区域就是要删除的区域。<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_5.png?raw=true" alt=""></p>
<p>接下来，我们就在上面的磁盘空间中找到每个对应大小的磁盘空间，右键删除即可。删除完后，我们会发现，删除后的空就会变成绿色（这就表示这块空间空闲可用）。如果你想把这块区域分配给windows用的话，你可以右键这块绿色的区域，进行“新建简单卷”，按照提示来操作即可。到此我们真的就把64位的ubuntu给删了，真的没有啦。</p>
<p>但是你重启下电脑会发现，它还是会直接进入windows系统，那你的另外一个系统怎么办呢？它跑哪里去啦？</p>
<h2 id="修复GRUB"><a href="#修复GRUB" class="headerlink" title="修复GRUB"></a>修复GRUB</h2><p>首先，你得制作一个Ubuntu系统的启动盘，这是用来修复GRUB用的。进入Ubuntu试用模式</p>
<ol>
<li><p>进入root 用户模式，输入“sudo -i”<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_6.jpg?raw=true" alt=""></p>
</li>
<li><p>使用命令“fdisk -l”查看现在的磁盘使用情况，我们可以清楚地看到我们现在只有4个linux相关的分区了。<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_7.jpg?raw=true" alt=""></p>
</li>
<li><p>现在我们就将GRUB安装到MBR中。按照图中命令敲吧。（如果你安装的Ubuntu系统中没有将/boot/挂载到具体的某一个磁盘上的话，mount /dev/sda8 /mnt/boot/  这个命令你就跳过吧）<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_8.jpg?raw=true" alt=""></p>
</li>
<li><p>上面的运行结果显示无错误。我们现在已经基本大功告成,如果上面运行结果有错误，可以是使用boot-repair来修复，教程<a href="http://jingyan.baidu.com/article/5553fa82cd48a765a23934ae.html" target="_blank" rel="external">用Boot-repair修复双系统引导</a></p>
</li>
<li><p>最后更新的GRUB,输入命令“sudo update -grub”<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_5_9.jpg?raw=true" alt=""></p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 查看主机硬件信息]]></title>
      <url>http://yoursite.com/2016/09/05/Linux-%E6%9F%A5%E7%9C%8B%E4%B8%BB%E6%9C%BA%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF/</url>
      <content type="html"><![CDATA[<p>最近在学习Linux,看的资料是鸟哥的.书上有道习题是查看自己主机的硬件信息,现在在这里总结下.<br><a id="more"></a></p>
<h3 id="查看CPU的厂商-型号-最高频率"><a href="#查看CPU的厂商-型号-最高频率" class="headerlink" title="查看CPU的厂商/型号/最高频率"></a>查看CPU的厂商/型号/最高频率</h3><ul>
<li>查看CPU信息  使用命令   <code>cat  /proc/cpuinfo</code><br>MyCpu 厂商:Intel  型号:Celeron 1017U 最高频率:1.60GHz(准确的是1587.625MHz)<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_1.png?raw=true" alt=""></li>
</ul>
<h3 id="查看内存的容量-接口-DDR-DDRII等"><a href="#查看内存的容量-接口-DDR-DDRII等" class="headerlink" title="查看内存的容量/接口(DDR/DDRII等)"></a>查看内存的容量/接口(DDR/DDRII等)</h3><ul>
<li><p>查看内存容量   使用命令   <code>cat  /proc/meminfo</code><br>My 内存总容量:5.79GB(6075060KB)<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_2.png?raw=true" alt=""></p>
</li>
<li><p>查看内存接口   使用命令   <code>dmidecode | grep -A16 &quot;Memory Device$&quot;</code><br>My 内存接口:DDR3<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_3.png?raw=true" alt=""></p>
</li>
</ul>
<h3 id="查看显卡的接口-AGP-PCIe内置-与容量"><a href="#查看显卡的接口-AGP-PCIe内置-与容量" class="headerlink" title="查看显卡的接口(AGP/PCIe内置)与容量"></a>查看显卡的接口(AGP/PCIe内置)与容量</h3><ul>
<li><p>查看显卡型号  使用命令   <code>lshw -C display</code><br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_4.png?raw=true" alt=""></p>
</li>
<li><p>查看显存     使用命令   <code>lspci -vnn | grep VGA -A 12</code><br>观察memory at d0000000<br>My 显存:256MB<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_5.png?raw=true" alt=""></p>
</li>
</ul>
<h3 id="查看主板的型号-南北桥的芯片型号-BIOS的版本-网卡声卡的型号"><a href="#查看主板的型号-南北桥的芯片型号-BIOS的版本-网卡声卡的型号" class="headerlink" title="查看主板的型号/南北桥的芯片型号/BIOS的版本/网卡声卡的型号"></a>查看主板的型号/南北桥的芯片型号/BIOS的版本/网卡声卡的型号</h3><ul>
<li><p>查看主板型号  使用命令 <code>dmidecode | grep -A16 &quot;System Information$&quot;</code><br>My 主板型号 03N858<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_6.png?raw=true" alt=""></p>
</li>
<li><p>查看南北桥芯片型号</p>
<ul>
<li>北桥芯片型号  使用命令  <code>dmesg | grep Chipset</code><br>My 北桥芯片型号 GF117<br><code>[   15.436587] nouveau  [  DEVICE][0000:02:00.0] Chipset: GF117 (NVD7)</code></li>
<li>南桥芯片型号  没有查到</li>
</ul>
</li>
</ul>
<ul>
<li><p>查看BIOS版本   使用命令 <code>dmidecode --type Bios</code><br>My BIOS版本: A05</p>
</li>
<li><p>查看声卡  使用命令 <code>lspci |grep -i audio</code><br>My 声卡: Inter 7 Series /C210</p>
</li>
<li><p>查看网卡  使用命令  <code>lspci | grep - i eth</code><br>My 网卡:Realtek RTL8101/2/6E</p>
</li>
</ul>
<h3 id="查看硬盘的连接接口-IDE-SATA等-硬盘容量-转速-缓冲存储器容量等"><a href="#查看硬盘的连接接口-IDE-SATA等-硬盘容量-转速-缓冲存储器容量等" class="headerlink" title="查看硬盘的连接接口(IDE/SATA等)/硬盘容量/转速/缓冲存储器容量等"></a>查看硬盘的连接接口(IDE/SATA等)/硬盘容量/转速/缓冲存储器容量等</h3><ul>
<li><p>查看硬盘的连接接口 使用命令 <code>lspci | grep 00:1f.2</code><br>My的硬盘连接接口:SATA<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_8.png?raw=true" alt=""></p>
</li>
<li><p>查看硬盘容量 使用命令 <code>lsblk</code><br>My硬盘容量:465.8G<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_9.png?raw=true" alt=""></p>
</li>
<li><p>查看硬盘转速 使用命令 <code>hdparm -I /dev/sda</code>  观察Nominal Media Rotation Rate行<br>My硬盘转速:5400<br><img src="https://github.com/HiKumho/blog/blob/master/img/blog_6_10.png?raw=true" alt=""></p>
</li>
<li>查看缓冲存储器容量  没有找到命令</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[数据库管理 Excel数据导入Mysql]]></title>
      <url>http://yoursite.com/2016/09/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86-Excel%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5Mysql/</url>
      <content type="html"><![CDATA[<h2 id="EXCEL筛选数据"><a href="#EXCEL筛选数据" class="headerlink" title="EXCEL筛选数据"></a>EXCEL筛选数据</h2><p> EXCEL中的数据可能有很多重复项，需要删除。<br>方法：    </p>
<ul>
<li>确认重复行，并在数据内容外的列设置公式形如=IF(A2=A1,1,2) // A2如果=A1 则当前单元格=1  并运行此公式至所有列（光标指向当前单元格右下角出现黑十字往拉下）</li>
<li>对上述所得的列进行选择性粘贴，粘贴为数据</li>
<li>然后对上所得的列进行“筛选”，选择数据为1（可能为2，要实际处理）的行全部删除<br>参考<a href="http://jingyan.baidu.com/article/eae078278fbdd81fec54853c.html" target="_blank" rel="external">WPS表格（或EXCEL）如何方便删除重复行</a></li>
</ul>
<h2 id="EXCEL导入数据"><a href="#EXCEL导入数据" class="headerlink" title="EXCEL导入数据"></a>EXCEL导入数据</h2><p>我是将EXCEL数据转成TXT文本格式(UTF8编码)<br>方法：</p>
<ul>
<li>直接将EXEL数据另存为TXT，这里WPS会有制表符还分割数据项。</li>
<li>我将数据项间的制表符用,替换</li>
<li>注意要删除TXT中每行最后的空格</li>
</ul>
<h2 id="MySQL中文字符的处理"><a href="#MySQL中文字符的处理" class="headerlink" title="MySQL中文字符的处理"></a>MySQL中文字符的处理</h2><p>如果想MySql导入中文字符，可能会出现乱码、报错等<br>之前在5.1报违反字符的错误，但当将数据库所有字符集设置成utf8后仍出现错误<br>这里原因可能是低版本的MySql不支持多字节的中文字符<br>于是将MySql升级到最新版本<br>关于设置Mysql字符集的方法可以在My.ini中设置Default-characters-set和 sever-characters-set<br><a href="http://my.oschina.net/5365437/blog/142312?fromerr=n6DQp3A3" target="_blank" rel="external">Mysql 插入数据里有中文字符出现 Incorrect string value 的错误</a>;</p>
<h3 id="MySql卸装处理"><a href="#MySql卸装处理" class="headerlink" title="MySql卸装处理"></a>MySql卸装处理</h3><ul>
<li>在Window中”服务”中停止Mysql</li>
<li>然后在”程序”中卸装Mysql</li>
<li>最后清除注册表<br>参考<a href="http://materliu.github.io/all/web/database/mysql/2014/04/24/uninstall-mysql-totaly.cm.html" target="_blank" rel="external">windows如何彻底卸载mysql</a></li>
</ul>
<h2 id="MySql数据文件导入"><a href="#MySql数据文件导入" class="headerlink" title="MySql数据文件导入"></a>MySql数据文件导入</h2><p>这里导入的是文本文件 </p>
<p>使用命令：<br>load data local infile ‘文件路径’ into table 表名<br>fields terminated by ‘,’<br>lines terminated by ‘\r\n’;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Web 前端技术介绍]]></title>
      <url>http://yoursite.com/2016/09/05/Web-%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<h2 id="HTML的概念"><a href="#HTML的概念" class="headerlink" title="HTML的概念"></a>HTML的概念</h2><p> 超文本标记语言（HyperText Markup Language，HTML）是一种用于创建网页的标准标记语言。HTML是一种基础技术，常与CSS，JS一起被众多网站用于设计令人赏心悦目的网页、网页应用程序以及移动应用程序的用户界面。以上摘抄着wiki<br>我的理解，HTML一种标记语言，不同一般文本(超越233)。Markdown也是标记语言，Markdown的文本会转成HTML或XHTML。</p>
<h3 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h3><ul>
<li>div标签：页面布局 我理解成div~Android.RelativeLayout      </li>
<li>h1~h6, p, span, strong, em等标签： 设置文本格式 （span标签之间有空格）</li>
<li>ul, li, ol, dl, dt, dd标签：此类标签用于设置带有列表内容的，比如导航栏的下拉菜单，多视频的缩略图等</li>
<li>form标签：form标签在UI显示上可以理解成div，透明的，用于提交数据</li>
<li>table标签：表格结构，尽量用div代替</li>
<li>img, canvas标签：图像容器，但是通常不直接操作，而是在其外层嵌套div，span标签（你问span是什么？span 用来组合元素，没有固定的格式表现。当对它应用样式时，它才会产生视觉上的变化。）</li>
<li>a标签：链接跳转<br>详细请看~<a href="https://leohxj.gitbooks.io/front-end-database/content/html-and-css-basic/common-tag.html" target="_blank" rel="external">前端工程师手册</a></li>
</ul>
<h3 id="HTML低保真图设计"><a href="#HTML低保真图设计" class="headerlink" title="HTML低保真图设计"></a>HTML低保真图设计</h3><p>低保真图便于用户了解整个项目的前端设计，快速开发出HTML页面原型图。<br><strong>使用工具：Axure</strong></p>
<h2 id="CSS的概念"><a href="#CSS的概念" class="headerlink" title="CSS的概念"></a>CSS的概念</h2><p>一种用来为结构化文档（如HTML文档或XML应用）添加样式（字体、间距和颜色等）的计算机语言，由W3C定义和维护。摘自Wiki<br>我理解成控制html标签的属性</p>
<h3 id="常用CSS属性"><a href="#常用CSS属性" class="headerlink" title="常用CSS属性"></a>常用CSS属性</h3><ul>
<li>定位Position: 属性值 relative 相对定位（相对与元素正常显示状态的偏离定位 其正常显示的区域空间仍然占据）<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;属性值absolute 绝对定位（元素脱离整个文档，相对与最近的已定位祖先元素，可以定位到其任何位置，并显示在最上层，其不占据原本显示的空间）<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;属性值 fixed 效果与absolute相同</li>
<li>元素居中： 布局容器内元素水平居中 容器的text-align:center;  容器内垂直居中容器的line-height=容器的height</li>
<li>列表水平： float：left</li>
<li>浮动float：可以定位元素 脱离文档流 当元素因为被浮动的元素影响其的布局时，该元素使用clear:both 清除浮动 显示该元素的原本位置</li>
</ul>
<h2 id="JavaScript的概念"><a href="#JavaScript的概念" class="headerlink" title="JavaScript的概念"></a>JavaScript的概念</h2><p>我的理解是前端脚本语言，实现一些用户交互功能，如弹出对话框，修改html、css属性等</p>
<h3 id="JS中构造对象"><a href="#JS中构造对象" class="headerlink" title="JS中构造对象"></a>JS中构造对象</h3><p>在JS中可以这样构造对象<br>funcation Persion(name,age){this.name=name;this.age=age;};<br>Persion Jack=new Persion(“Jack”,20);</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Github 基本操作]]></title>
      <url>http://yoursite.com/2016/09/05/Github-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h2 id="什么是Github？"><a href="#什么是Github？" class="headerlink" title="什么是Github？"></a>什么是Github？</h2><p>Github，要了解什么是Git，Git最初是linus为了管理Linux内核开发的代码版本控制器,当然还有多人异地协作开发的能力。Github是Git的网站平台。 总之就是分布式版本控制管理软件（笑），现在已经是重要的社交平台了2333</p>
<h2 id="注册安装"><a href="#注册安装" class="headerlink" title="注册安装"></a>注册安装</h2><p>注册不介绍了，请前往<a href="http://www.github.com" target="_blank" rel="external">Github</a>  安装可以使用Desktop版，但在线下载十分麻烦，可以Google下离线版，我是在<a href="http://download.csdn.net/download/nevinblog/9031049" target="_blank" rel="external">CSDN</a>上下载</p>
<h2 id="创建仓库（New-repository）"><a href="#创建仓库（New-repository）" class="headerlink" title="创建仓库（New repository）"></a>创建仓库（New repository）</h2><p>仓库就是管理项目的空间，在Github网站上创建的是在线版 Desktop创建的是本地版，当然通过Push及Pull（稍后解释）可以及时推送更新本地仓库</p>
<p><img src="https://pic3.zhimg.com/fa17ad7322545d236198a206063f378e_b.png" alt=""></p>
<h2 id="删除仓库"><a href="#删除仓库" class="headerlink" title="删除仓库"></a>删除仓库</h2><p>在仓库首页的settings中最下方有一个Danger Zone删除仓库,删除仓库需要输入仓库名确认<br><img src="http://static.oschina.net/uploads/space/2013/0331/140629_56aS_580112.png" alt=""></p>
<h2 id="关于Watch、Star、Fork、Clone"><a href="#关于Watch、Star、Fork、Clone" class="headerlink" title="关于Watch、Star、Fork、Clone"></a>关于Watch、Star、Fork、Clone</h2><p>Watch是关注，等作者更新时，会收到通知； Star是收藏，方便以后查找，不会收到作者更新通知fork就是拷贝作者的项目至我们git中了，可以理解成你想要参与此项目; Clone就是拷贝项目至本地，之前我就是把Github当成找源码的地方，现在好好学学:)</p>
<h2 id="上传Commit"><a href="#上传Commit" class="headerlink" title="上传Commit"></a>上传Commit</h2><p>仓库里有一条叫master的主线，当我们没有创建分支branch时，我们上传的文件是提交到master中，我们一个提交动作会有描述信息，方便我们日后查找此提交的信息，或者回滚提交~ 回滚历史版本请找小齿轮按钮（Roll Back to this Commit）<br><img src="https://pic4.zhimg.com/2e2d2a0da0662f65fb969ef8005ee01f_b.png" alt=""></p>
<h2 id="关于分支Branch"><a href="#关于分支Branch" class="headerlink" title="关于分支Branch"></a>关于分支Branch</h2><p>分支可以理解成我们项目的发行号，或者调试版本等等等</p>
<h2 id="有分支，当然有合并"><a href="#有分支，当然有合并" class="headerlink" title="有分支，当然有合并"></a>有分支，当然有合并</h2><p>合并Pull，当我们和一个大牛正在进行同一个项目的开发，一个大牛手上的branch或者master写的很多跟我们手上的branch或者master没有的功能，我们就会发送一个pull request给大牛，如果我们写的代码和大牛写的代码没有冲突，就可以自行合并大牛的代码至我们项目，如果有冲突，可以在pull request的空间上给大牛商量解决。 pull requestsh是双向的，即分支可以请求主线合并代码至主线，分支可以请求主线合并代码至分支，当然主线也是可以请求分支的。</p>
<h2 id="Github的基本操作图"><a href="#Github的基本操作图" class="headerlink" title="Github的基本操作图"></a>Github的基本操作图</h2><p><img src="https://pic4.zhimg.com/6c22d708def21094956b76bc7df2240b_b.png" alt=""></p>
<h2 id="关于MarkDown"><a href="#关于MarkDown" class="headerlink" title="关于MarkDown"></a>关于MarkDown</h2><p>MarkDown是一种标记的文本格式，可以转换成HTML或XML很方便~~</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://www.zhihu.com/question/20070065" target="_blank" rel="external">怎样使用 GitHub？</a> </li>
<li><a href="http://www.oschina.net/question/256591_103418" target="_blank" rel="external">怎么删除github上的仓库</a> </li>
<li><a href="https://www.zhihu.com/question/20406847" target="_blank" rel="external">GitHub 中为什么有了 Watch 又增加了一个 Star 呢？</a> </li>
</ul>
]]></content>
    </entry>
    
  
  
</search>
